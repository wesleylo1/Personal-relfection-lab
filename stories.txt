Building the Project

The project that I created is a weather application that updates the user on the weather conditions and temperatures, based on the domestic city they search for. It also allows the user to create a list of their own cities, which they can click on to get weather updates. This list will stay there, even after they leave the website. The technology I used in the project are HTML, CSS, and JavaScript, along with Axios for reaching out to the weather API. For JavaScript, I used React.js, Express.js, and Node.js. I chose these specifically because that’s what I’ve been learning in my web development program, and I wanted to become more familiar with building projects with them. The deadline for the project was also roughly 7 to 10 days, so I didn’t think it’d be wise to base this kind of project on something I’d have to learn within a week.
Something I’ve learned from building this project is that bugs will always be part of a project, no matter how much planning there was for it. I thought I knew what kind of functions and methods to use, but things just didn’t turn out the way I thought. I ended up having to do some research for fixing certain bugs I came across, which is when I realized that looking for help online isn’t a bad thing, it’s just another way to use the resources around you.  As I was finishing up the project and fixing the last few bugs, I became more comfortable searching for answers to issues I was coming across. 

Fixing a Bug

One of the first bugs I came across was when the website would crash when the user searches for a city, but either has a spelling error or the city and state ID don’t match. It seemed like the URL for the API would take the incorrect information, causing it to send back an error and just shut the site down. I found out about this through my dad, when I had him do some exploratory testing on the website. After searching for a city spelled wrong, he wasn’t able to search for anymore. When refreshing the page, there was a 404 error on the screen.
To resolve the issue, I created a local database of all the domestic cities available from simplemaps.com and used JavaScript to run the user input through the array of cities and state IDs. If there was no match, an error would be sent out to the client, alerting them of needing to put in the correct information.  
